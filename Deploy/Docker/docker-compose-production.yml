name: ypdf

services:
  web-app:
    build:
      context: ../../.
      dockerfile: ./Applications/Ypdf.Web.WebApp/Dockerfile
    container_name: WebApp
    depends_on:
      - account-api
      - files-api
      - pdf-operations-history-api
    expose:
      - 9001
    ports:
      - 9001:443
    restart: on-failure
    deploy:
      resources:
        limits:
          cpus: '0.3'
          memory: 256M
    environment:
      ASPNETCORE_URLS: https://+;http://+
      ASPNETCORE_ENVIRONMENT: Production
      ASPNETCORE_HTTPS_PORT: 9001
      ASPNETCORE_Kestrel__Certificates__Default__Path: /https/localhost.crt
      ASPNETCORE_Kestrel__Certificates__Default__KeyPath: /https/localhost.key
    volumes:
      - ../../Certificates:/https

  account-api:
    build:
      context: ../../.
      dockerfile: ./Services/Ypdf.Web.AccountAPI/Dockerfile
    container_name: AccountAPI
    depends_on:
      - accounts-database
    expose:
      - 8081
    ports:
      - 8081:443
    restart: on-failure
    deploy:
      resources:
        limits:
          cpus: '0.1'
          memory: 128M
    environment:
      ASPNETCORE_URLS: https://+;http://+
      ASPNETCORE_ENVIRONMENT: Production
      ASPNETCORE_HTTPS_PORT: 8081
      ASPNETCORE_Kestrel__Certificates__Default__Path: /https/localhost.crt
      ASPNETCORE_Kestrel__Certificates__Default__KeyPath: /https/localhost.key
      Jwt__Key: ${JWT_KEY}
      ConnectionStrings__Accounts: >-
        Host=accounts-database;
        Port=5432;
        Database=AccountsDB;
        Username=${ACCOUNTS_DATABASE_USER};
        Password=${ACCOUNTS_DATABASE_PASSWORD}
      InitialUsers__Admin__Email: ${ADMIN_USER_EMAIL}
      InitialUsers__Admin__UserName: ${ADMIN_USER_USERNAME}
      InitialUsers__Admin__Nickname: ${ADMIN_USER_NICKNAME}
      InitialUsers__Admin__Password: ${ADMIN_USER_PASSWORD}
      InitialUsers__TestUser__Email: ${TEST_USER_EMAIL}
      InitialUsers__TestUser__UserName: ${TEST_USER_USERNAME}
      InitialUsers__TestUser__Nickname: ${TEST_USER_NICKNAME}
      InitialUsers__TestUser__Password: ${TEST_USER_PASSWORD}
    volumes:
      - ../../Certificates:/https

  files-api:
    build:
      context: ../../.
      dockerfile: ./Services/Ypdf.Web.FilesAPI/Dockerfile
    container_name: FilesAPI
    depends_on:
      - rabbitmq
    expose:
      - 8082
    ports:
      - 8082:443
    restart: on-failure
    deploy:
      resources:
        limits:
          cpus: '0.1'
          memory: 128M
    environment:
      ASPNETCORE_URLS: https://+;http://+
      ASPNETCORE_ENVIRONMENT: Production
      ASPNETCORE_HTTPS_PORT: 8082
      ASPNETCORE_Kestrel__Certificates__Default__Path: /https/localhost.crt
      ASPNETCORE_Kestrel__Certificates__Default__KeyPath: /https/localhost.key
      Jwt__Key: ${JWT_KEY}
      RabbitMq__HostName: rabbitmq
      RabbitMq__UserName: ${RABBITMQ_USER}
      RabbitMq__Password: ${RABBITMQ_PASSWORD}
    volumes:
      - ../../Certificates:/https
      - output_files:/output
      - intput_files:/input

  pdf-operations-history-api:
    build:
      context: ../../.
      dockerfile: ./Services/Ypdf.Web.PdfOperationsHistoryAPI/Dockerfile
    container_name: PdfOperationsHistoryAPI
    depends_on:
      - rabbitmq
    expose:
      - 8083
    ports:
      - 8083:443
    restart: on-failure
    deploy:
      resources:
        limits:
          cpus: '0.1'
          memory: 128M
    environment:
      ASPNETCORE_URLS: https://+;http://+
      ASPNETCORE_ENVIRONMENT: Production
      ASPNETCORE_HTTPS_PORT: 8083
      ASPNETCORE_Kestrel__Certificates__Default__Path: /https/localhost.crt
      ASPNETCORE_Kestrel__Certificates__Default__KeyPath: /https/localhost.key
      Jwt__Key: ${JWT_KEY}
      RabbitMq__HostName: rabbitmq
      RabbitMq__UserName: ${RABBITMQ_USER}
      RabbitMq__Password: ${RABBITMQ_PASSWORD}
    volumes:
      - ../../Certificates:/https
      - db_data:/db

  pdf-processing-api:
    build:
      context: ../../.
      dockerfile: ./Services/Ypdf.Web.PdfProcessingAPI/Dockerfile
    container_name: PdfProcessingAPI
    depends_on:
      - rabbitmq
    expose:
      - 8084
    ports:
      - 8084:443
    restart: on-failure
    deploy:
      resources:
        limits:
          cpus: '0.1'
          memory: 128M
    environment:
      ASPNETCORE_URLS: https://+;http://+
      ASPNETCORE_ENVIRONMENT: Production
      ASPNETCORE_HTTPS_PORT: 8084
      ASPNETCORE_Kestrel__Certificates__Default__Path: /https/localhost.crt
      ASPNETCORE_Kestrel__Certificates__Default__KeyPath: /https/localhost.key
      RabbitMq__HostName: rabbitmq
      RabbitMq__UserName: ${RABBITMQ_USER}
      RabbitMq__Password: ${RABBITMQ_PASSWORD}
    volumes:
      - ../../Certificates:/https
      - output_files:/output
      - intput_files:/input

  accounts-database:
    image: postgis/postgis:13-master
    container_name: AccountsDbPostgres
    expose:
      - 8080
    ports:
      - 8080:5432
    restart: on-failure
    deploy:
      resources:
        limits:
          cpus: '0.3'
          memory: 256M
    environment:
      POSTGRES_USER: ${ACCOUNTS_DATABASE_USER}
      POSTGRES_PASSWORD: ${ACCOUNTS_DATABASE_PASSWORD}
      POSTGRES_MULTIPLE_DATABASES: AccountsDB

  rabbitmq:
    image: rabbitmq:management
    container_name: RabbitMQ
    expose:
      - 5672
      - 15672
    ports:
      - 5672:5672   # RabbitMQ port
      - 15672:15672 # RabbitMQ management UI
    restart: on-failure
    deploy:
      resources:
        limits:
          cpus: '0.3'
          memory: 256M
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD}

volumes:
  db_data:
  output_files:
  intput_files:
